#include <dV_linear_tetrahedron_dq.h>

#include <dphi_linear_tetrahedron_dX.h>
#include <dpsi_neo_hookean_dF.h>
#include <quadrature_single_point.h>
#include <iostream>

//Compute the gradient of the potential energy of a single tetrahedron. Note: you will need both dpsi_neo_hookean_dq.cpp and quadrature_single_point.h to do this.

//Input:
//  q - generalized coordinates for the FEM system
//  V - the nx3 matrix of undeformed vertex positions. Each row is a single undeformed vertex position.
//  element - the 1x4 vertex indices for this tetrahedron
//  v0 - the undeformed tetrahedron volume
//  C,D - material parameters for the Neo-Hookean model
//Output:
//  dV - the 12x1 gradient of the potential energy for a single tetrahedron

void dV_linear_tetrahedron_dq(Eigen::Vector12d &dV, Eigen::Ref<const Eigen::VectorXd> q, 
                          Eigen::Ref<const Eigen::MatrixXd> V, Eigen::Ref<const Eigen::RowVectorXi> element, double volume,
                          double C, double D) {

   auto neohookean_linear_tet = [&](Eigen::Vector12d &dV, Eigen::Ref<const Eigen::VectorXd>q, Eigen::Ref<const Eigen::RowVectorXi> element, Eigen::Ref<const Eigen::Vector3d> X) {
        
    	unsigned  i1 = element(0), i2 = element(1), i3 = element(2), i4 = element(3);
   	 double X_11 = V(i1, 0), X_12 = V(i1, 1), X_13 = V(i1, 2), // X1 - undef vertex1
           	X_21 = V(i2, 0), X_22 = V(i2, 1), X_23 = V(i2, 2), // X2 - undef vertex2
           	X_31 = V(i3, 0), X_32 = V(i3, 1), X_33 = V(i3, 2), // X3 - undef vertex3
           	X_41 = V(i4, 0), X_42 = V(i4, 1), X_43 = V(i4, 2), // X4 - undef vertex4
           	  X1 = X(0), X2 = X(1), X3 = X(2); // X - undef vertex

	double x_11 = q(3 * i1), x_12 = q(3 * i1 + 1), x_13 = q(3 * i1 + 2), // x1 - def vertex1
               x_21 = q(3 * i2), x_22 = q(3 * i2 + 1), x_23 = q(3 * i2 + 2), // x2 - def vertex2
               x_31 = q(3 * i3), x_32 = q(3 * i3 + 1), x_33 = q(3 * i3 + 2), // x3 - def vertex3
               x_41 = q(3 * i4), x_42 = q(3 * i4 + 1), x_43 = q(3 * i4 + 2); // x4 - def vertex4

	//set F
	Eigen::Matrix43d dphi;
	dphi.setZero();
	dphi_linear_tetrahedron_dX(dphi, V, element, X);
	
	Eigen::Matrix3d F;
	F.setZero();
	
	F(0, 0) = dphi(0,0) * x_11 + dphi(1,0) * x_21 + dphi(2, 0) * x_31 + dphi(3, 0) * x_41;
    
    	F(0, 1) = dphi(0,1) * x_11 + dphi(1,1) * x_21 + dphi(2, 1) * x_31 + dphi(3, 1) * x_41;
    
    	F(0, 2) = dphi(0,2) * x_11 + dphi(1,2) * x_21 + dphi(2, 2) * x_31 + dphi(3, 2) * x_41;
    
    	F(1, 0) = dphi(0,0) * x_12 + dphi(1,0) * x_22 + dphi(2, 0) * x_32 + dphi(3, 0) * x_42;
                             
    	F(1, 1) = dphi(0,1) * x_12 + dphi(1,1) * x_22 + dphi(2, 1) * x_32 + dphi(3, 1) * x_42;
                             
    	F(1, 2) = dphi(0,2) * x_12 + dphi(1,2) * x_22 + dphi(2, 2) * x_32 + dphi(3, 2) * x_42;
    
    	F(2, 0) = dphi(0,0) * x_13 + dphi(1,0) * x_23 + dphi(2, 0) * x_33 + dphi(3, 0) * x_43;
                             
    	F(2, 1) = dphi(0,1) * x_13 + dphi(1,1) * x_23 + dphi(2, 1) * x_33 + dphi(3, 1) * x_43;
                             
    	F(2, 2) = dphi(0,2) * x_13 + dphi(1,2) * x_23 + dphi(2, 2) * x_33 + dphi(3, 2) * x_43;
	


	//dFdq 9 x 12
	Eigen::MatrixXd B;
	B.resize(9, 12);
	B.setZero();
	
	B(0, 0) = (X_22*X_33-X_23*X_32-X_22*X_43+X_23*X_42+X_32*X_43-X_33*X_42)/(X_11*X_22*X_33-X_11*X_23*X_32-X_12*X_21*X_33+X_12*X_23*X_31+X_13*X_21*X_32-X_13*X_22*X_31-X_11*X_22*X_43+X_11*X_23*X_42+X_12*X_21*X_43-X_12*X_23*X_41-X_13*X_21*X_42+X_13*X_22*X_41+X_11*X_32*X_43-X_11*X_33*X_42-X_12*X_31*X_43+X_12*X_33*X_41+X_13*X_31*X_42-X_13*X_32*X_41-X_21*X_32*X_43+X_21*X_33*X_42+X_22*X_31*X_43-X_22*X_33*X_41-X_23*X_31*X_42+X_23*X_32*X_41);
       	B(0, 3) = -(X_12*X_33-X_13*X_32-X_12*X_43+X_13*X_42+X_32*X_43-X_33*X_42)/(X_11*X_22*X_33-X_11*X_23*X_32-X_12*X_21*X_33+X_12*X_23*X_31+X_13*X_21*X_32-X_13*X_22*X_31-X_11*X_22*X_43+X_11*X_23*X_42+X_12*X_21*X_43-X_12*X_23*X_41-X_13*X_21*X_42+X_13*X_22*X_41+X_11*X_32*X_43-X_11*X_33*X_42-X_12*X_31*X_43+X_12*X_33*X_41+X_13*X_31*X_42-X_13*X_32*X_41-X_21*X_32*X_43+X_21*X_33*X_42+X_22*X_31*X_43-X_22*X_33*X_41-X_23*X_31*X_42+X_23*X_32*X_41);
       	B(0, 6) = (X_12*X_23-X_13*X_22-X_12*X_43+X_13*X_42+X_22*X_43-X_23*X_42)/(X_11*X_22*X_33-X_11*X_23*X_32-X_12*X_21*X_33+X_12*X_23*X_31+X_13*X_21*X_32-X_13*X_22*X_31-X_11*X_22*X_43+X_11*X_23*X_42+X_12*X_21*X_43-X_12*X_23*X_41-X_13*X_21*X_42+X_13*X_22*X_41+X_11*X_32*X_43-X_11*X_33*X_42-X_12*X_31*X_43+X_12*X_33*X_41+X_13*X_31*X_42-X_13*X_32*X_41-X_21*X_32*X_43+X_21*X_33*X_42+X_22*X_31*X_43-X_22*X_33*X_41-X_23*X_31*X_42+X_23*X_32*X_41);
       	B(0, 9) = -(X_12*X_23-X_13*X_22-X_12*X_33+X_13*X_32+X_22*X_33-X_23*X_32)/(X_11*X_22*X_33-X_11*X_23*X_32-X_12*X_21*X_33+X_12*X_23*X_31+X_13*X_21*X_32-X_13*X_22*X_31-X_11*X_22*X_43+X_11*X_23*X_42+X_12*X_21*X_43-X_12*X_23*X_41-X_13*X_21*X_42+X_13*X_22*X_41+X_11*X_32*X_43-X_11*X_33*X_42-X_12*X_31*X_43+X_12*X_33*X_41+X_13*X_31*X_42-X_13*X_32*X_41-X_21*X_32*X_43+X_21*X_33*X_42+X_22*X_31*X_43-X_22*X_33*X_41-X_23*X_31*X_42+X_23*X_32*X_41);
       	B(1, 0) = -(X_21*X_33-X_23*X_31-X_21*X_43+X_23*X_41+X_31*X_43-X_33*X_41)/(X_11*X_22*X_33-X_11*X_23*X_32-X_12*X_21*X_33+X_12*X_23*X_31+X_13*X_21*X_32-X_13*X_22*X_31-X_11*X_22*X_43+X_11*X_23*X_42+X_12*X_21*X_43-X_12*X_23*X_41-X_13*X_21*X_42+X_13*X_22*X_41+X_11*X_32*X_43-X_11*X_33*X_42-X_12*X_31*X_43+X_12*X_33*X_41+X_13*X_31*X_42-X_13*X_32*X_41-X_21*X_32*X_43+X_21*X_33*X_42+X_22*X_31*X_43-X_22*X_33*X_41-X_23*X_31*X_42+X_23*X_32*X_41);
       	B(1, 3) = (X_11*X_33-X_13*X_31-X_11*X_43+X_13*X_41+X_31*X_43-X_33*X_41)/(X_11*X_22*X_33-X_11*X_23*X_32-X_12*X_21*X_33+X_12*X_23*X_31+X_13*X_21*X_32-X_13*X_22*X_31-X_11*X_22*X_43+X_11*X_23*X_42+X_12*X_21*X_43-X_12*X_23*X_41-X_13*X_21*X_42+X_13*X_22*X_41+X_11*X_32*X_43-X_11*X_33*X_42-X_12*X_31*X_43+X_12*X_33*X_41+X_13*X_31*X_42-X_13*X_32*X_41-X_21*X_32*X_43+X_21*X_33*X_42+X_22*X_31*X_43-X_22*X_33*X_41-X_23*X_31*X_42+X_23*X_32*X_41);
       	B(1, 6) = -(X_11*X_23-X_13*X_21-X_11*X_43+X_13*X_41+X_21*X_43-X_23*X_41)/(X_11*X_22*X_33-X_11*X_23*X_32-X_12*X_21*X_33+X_12*X_23*X_31+X_13*X_21*X_32-X_13*X_22*X_31-X_11*X_22*X_43+X_11*X_23*X_42+X_12*X_21*X_43-X_12*X_23*X_41-X_13*X_21*X_42+X_13*X_22*X_41+X_11*X_32*X_43-X_11*X_33*X_42-X_12*X_31*X_43+X_12*X_33*X_41+X_13*X_31*X_42-X_13*X_32*X_41-X_21*X_32*X_43+X_21*X_33*X_42+X_22*X_31*X_43-X_22*X_33*X_41-X_23*X_31*X_42+X_23*X_32*X_41);
       	B(1, 9) = (X_11*X_23-X_13*X_21-X_11*X_33+X_13*X_31+X_21*X_33-X_23*X_31)/(X_11*X_22*X_33-X_11*X_23*X_32-X_12*X_21*X_33+X_12*X_23*X_31+X_13*X_21*X_32-X_13*X_22*X_31-X_11*X_22*X_43+X_11*X_23*X_42+X_12*X_21*X_43-X_12*X_23*X_41-X_13*X_21*X_42+X_13*X_22*X_41+X_11*X_32*X_43-X_11*X_33*X_42-X_12*X_31*X_43+X_12*X_33*X_41+X_13*X_31*X_42-X_13*X_32*X_41-X_21*X_32*X_43+X_21*X_33*X_42+X_22*X_31*X_43-X_22*X_33*X_41-X_23*X_31*X_42+X_23*X_32*X_41);
       	B(2, 0) = (X_21*X_32-X_22*X_31-X_21*X_42+X_22*X_41+X_31*X_42-X_32*X_41)/(X_11*X_22*X_33-X_11*X_23*X_32-X_12*X_21*X_33+X_12*X_23*X_31+X_13*X_21*X_32-X_13*X_22*X_31-X_11*X_22*X_43+X_11*X_23*X_42+X_12*X_21*X_43-X_12*X_23*X_41-X_13*X_21*X_42+X_13*X_22*X_41+X_11*X_32*X_43-X_11*X_33*X_42-X_12*X_31*X_43+X_12*X_33*X_41+X_13*X_31*X_42-X_13*X_32*X_41-X_21*X_32*X_43+X_21*X_33*X_42+X_22*X_31*X_43-X_22*X_33*X_41-X_23*X_31*X_42+X_23*X_32*X_41);
       	B(2, 3) = -(X_11*X_32-X_12*X_31-X_11*X_42+X_12*X_41+X_31*X_42-X_32*X_41)/(X_11*X_22*X_33-X_11*X_23*X_32-X_12*X_21*X_33+X_12*X_23*X_31+X_13*X_21*X_32-X_13*X_22*X_31-X_11*X_22*X_43+X_11*X_23*X_42+X_12*X_21*X_43-X_12*X_23*X_41-X_13*X_21*X_42+X_13*X_22*X_41+X_11*X_32*X_43-X_11*X_33*X_42-X_12*X_31*X_43+X_12*X_33*X_41+X_13*X_31*X_42-X_13*X_32*X_41-X_21*X_32*X_43+X_21*X_33*X_42+X_22*X_31*X_43-X_22*X_33*X_41-X_23*X_31*X_42+X_23*X_32*X_41);
       	B(2, 6) = (X_11*X_22-X_12*X_21-X_11*X_42+X_12*X_41+X_21*X_42-X_22*X_41)/(X_11*X_22*X_33-X_11*X_23*X_32-X_12*X_21*X_33+X_12*X_23*X_31+X_13*X_21*X_32-X_13*X_22*X_31-X_11*X_22*X_43+X_11*X_23*X_42+X_12*X_21*X_43-X_12*X_23*X_41-X_13*X_21*X_42+X_13*X_22*X_41+X_11*X_32*X_43-X_11*X_33*X_42-X_12*X_31*X_43+X_12*X_33*X_41+X_13*X_31*X_42-X_13*X_32*X_41-X_21*X_32*X_43+X_21*X_33*X_42+X_22*X_31*X_43-X_22*X_33*X_41-X_23*X_31*X_42+X_23*X_32*X_41);
       	B(2, 9) = -(X_11*X_22-X_12*X_21-X_11*X_32+X_12*X_31+X_21*X_32-X_22*X_31)/(X_11*X_22*X_33-X_11*X_23*X_32-X_12*X_21*X_33+X_12*X_23*X_31+X_13*X_21*X_32-X_13*X_22*X_31-X_11*X_22*X_43+X_11*X_23*X_42+X_12*X_21*X_43-X_12*X_23*X_41-X_13*X_21*X_42+X_13*X_22*X_41+X_11*X_32*X_43-X_11*X_33*X_42-X_12*X_31*X_43+X_12*X_33*X_41+X_13*X_31*X_42-X_13*X_32*X_41-X_21*X_32*X_43+X_21*X_33*X_42+X_22*X_31*X_43-X_22*X_33*X_41-X_23*X_31*X_42+X_23*X_32*X_41);
       	B(3, 1) = (X_22*X_33-X_23*X_32-X_22*X_43+X_23*X_42+X_32*X_43-X_33*X_42)/(X_11*X_22*X_33-X_11*X_23*X_32-X_12*X_21*X_33+X_12*X_23*X_31+X_13*X_21*X_32-X_13*X_22*X_31-X_11*X_22*X_43+X_11*X_23*X_42+X_12*X_21*X_43-X_12*X_23*X_41-X_13*X_21*X_42+X_13*X_22*X_41+X_11*X_32*X_43-X_11*X_33*X_42-X_12*X_31*X_43+X_12*X_33*X_41+X_13*X_31*X_42-X_13*X_32*X_41-X_21*X_32*X_43+X_21*X_33*X_42+X_22*X_31*X_43-X_22*X_33*X_41-X_23*X_31*X_42+X_23*X_32*X_41);
       	B(3, 4) = -(X_12*X_33-X_13*X_32-X_12*X_43+X_13*X_42+X_32*X_43-X_33*X_42)/(X_11*X_22*X_33-X_11*X_23*X_32-X_12*X_21*X_33+X_12*X_23*X_31+X_13*X_21*X_32-X_13*X_22*X_31-X_11*X_22*X_43+X_11*X_23*X_42+X_12*X_21*X_43-X_12*X_23*X_41-X_13*X_21*X_42+X_13*X_22*X_41+X_11*X_32*X_43-X_11*X_33*X_42-X_12*X_31*X_43+X_12*X_33*X_41+X_13*X_31*X_42-X_13*X_32*X_41-X_21*X_32*X_43+X_21*X_33*X_42+X_22*X_31*X_43-X_22*X_33*X_41-X_23*X_31*X_42+X_23*X_32*X_41);
       	B(3, 7) = (X_12*X_23-X_13*X_22-X_12*X_43+X_13*X_42+X_22*X_43-X_23*X_42)/(X_11*X_22*X_33-X_11*X_23*X_32-X_12*X_21*X_33+X_12*X_23*X_31+X_13*X_21*X_32-X_13*X_22*X_31-X_11*X_22*X_43+X_11*X_23*X_42+X_12*X_21*X_43-X_12*X_23*X_41-X_13*X_21*X_42+X_13*X_22*X_41+X_11*X_32*X_43-X_11*X_33*X_42-X_12*X_31*X_43+X_12*X_33*X_41+X_13*X_31*X_42-X_13*X_32*X_41-X_21*X_32*X_43+X_21*X_33*X_42+X_22*X_31*X_43-X_22*X_33*X_41-X_23*X_31*X_42+X_23*X_32*X_41);
       	B(3, 10) = -(X_12*X_23-X_13*X_22-X_12*X_33+X_13*X_32+X_22*X_33-X_23*X_32)/(X_11*X_22*X_33-X_11*X_23*X_32-X_12*X_21*X_33+X_12*X_23*X_31+X_13*X_21*X_32-X_13*X_22*X_31-X_11*X_22*X_43+X_11*X_23*X_42+X_12*X_21*X_43-X_12*X_23*X_41-X_13*X_21*X_42+X_13*X_22*X_41+X_11*X_32*X_43-X_11*X_33*X_42-X_12*X_31*X_43+X_12*X_33*X_41+X_13*X_31*X_42-X_13*X_32*X_41-X_21*X_32*X_43+X_21*X_33*X_42+X_22*X_31*X_43-X_22*X_33*X_41-X_23*X_31*X_42+X_23*X_32*X_41);
       	B(4, 1) = -(X_21*X_33-X_23*X_31-X_21*X_43+X_23*X_41+X_31*X_43-X_33*X_41)/(X_11*X_22*X_33-X_11*X_23*X_32-X_12*X_21*X_33+X_12*X_23*X_31+X_13*X_21*X_32-X_13*X_22*X_31-X_11*X_22*X_43+X_11*X_23*X_42+X_12*X_21*X_43-X_12*X_23*X_41-X_13*X_21*X_42+X_13*X_22*X_41+X_11*X_32*X_43-X_11*X_33*X_42-X_12*X_31*X_43+X_12*X_33*X_41+X_13*X_31*X_42-X_13*X_32*X_41-X_21*X_32*X_43+X_21*X_33*X_42+X_22*X_31*X_43-X_22*X_33*X_41-X_23*X_31*X_42+X_23*X_32*X_41);
       	B(4, 4) = (X_11*X_33-X_13*X_31-X_11*X_43+X_13*X_41+X_31*X_43-X_33*X_41)/(X_11*X_22*X_33-X_11*X_23*X_32-X_12*X_21*X_33+X_12*X_23*X_31+X_13*X_21*X_32-X_13*X_22*X_31-X_11*X_22*X_43+X_11*X_23*X_42+X_12*X_21*X_43-X_12*X_23*X_41-X_13*X_21*X_42+X_13*X_22*X_41+X_11*X_32*X_43-X_11*X_33*X_42-X_12*X_31*X_43+X_12*X_33*X_41+X_13*X_31*X_42-X_13*X_32*X_41-X_21*X_32*X_43+X_21*X_33*X_42+X_22*X_31*X_43-X_22*X_33*X_41-X_23*X_31*X_42+X_23*X_32*X_41);
       	B(4, 7) = -(X_11*X_23-X_13*X_21-X_11*X_43+X_13*X_41+X_21*X_43-X_23*X_41)/(X_11*X_22*X_33-X_11*X_23*X_32-X_12*X_21*X_33+X_12*X_23*X_31+X_13*X_21*X_32-X_13*X_22*X_31-X_11*X_22*X_43+X_11*X_23*X_42+X_12*X_21*X_43-X_12*X_23*X_41-X_13*X_21*X_42+X_13*X_22*X_41+X_11*X_32*X_43-X_11*X_33*X_42-X_12*X_31*X_43+X_12*X_33*X_41+X_13*X_31*X_42-X_13*X_32*X_41-X_21*X_32*X_43+X_21*X_33*X_42+X_22*X_31*X_43-X_22*X_33*X_41-X_23*X_31*X_42+X_23*X_32*X_41);
       	B(4, 10) = (X_11*X_23-X_13*X_21-X_11*X_33+X_13*X_31+X_21*X_33-X_23*X_31)/(X_11*X_22*X_33-X_11*X_23*X_32-X_12*X_21*X_33+X_12*X_23*X_31+X_13*X_21*X_32-X_13*X_22*X_31-X_11*X_22*X_43+X_11*X_23*X_42+X_12*X_21*X_43-X_12*X_23*X_41-X_13*X_21*X_42+X_13*X_22*X_41+X_11*X_32*X_43-X_11*X_33*X_42-X_12*X_31*X_43+X_12*X_33*X_41+X_13*X_31*X_42-X_13*X_32*X_41-X_21*X_32*X_43+X_21*X_33*X_42+X_22*X_31*X_43-X_22*X_33*X_41-X_23*X_31*X_42+X_23*X_32*X_41);
       	B(5, 1) = (X_21*X_32-X_22*X_31-X_21*X_42+X_22*X_41+X_31*X_42-X_32*X_41)/(X_11*X_22*X_33-X_11*X_23*X_32-X_12*X_21*X_33+X_12*X_23*X_31+X_13*X_21*X_32-X_13*X_22*X_31-X_11*X_22*X_43+X_11*X_23*X_42+X_12*X_21*X_43-X_12*X_23*X_41-X_13*X_21*X_42+X_13*X_22*X_41+X_11*X_32*X_43-X_11*X_33*X_42-X_12*X_31*X_43+X_12*X_33*X_41+X_13*X_31*X_42-X_13*X_32*X_41-X_21*X_32*X_43+X_21*X_33*X_42+X_22*X_31*X_43-X_22*X_33*X_41-X_23*X_31*X_42+X_23*X_32*X_41);
       	B(5, 4) = -(X_11*X_32-X_12*X_31-X_11*X_42+X_12*X_41+X_31*X_42-X_32*X_41)/(X_11*X_22*X_33-X_11*X_23*X_32-X_12*X_21*X_33+X_12*X_23*X_31+X_13*X_21*X_32-X_13*X_22*X_31-X_11*X_22*X_43+X_11*X_23*X_42+X_12*X_21*X_43-X_12*X_23*X_41-X_13*X_21*X_42+X_13*X_22*X_41+X_11*X_32*X_43-X_11*X_33*X_42-X_12*X_31*X_43+X_12*X_33*X_41+X_13*X_31*X_42-X_13*X_32*X_41-X_21*X_32*X_43+X_21*X_33*X_42+X_22*X_31*X_43-X_22*X_33*X_41-X_23*X_31*X_42+X_23*X_32*X_41);
       	B(5, 7) = (X_11*X_22-X_12*X_21-X_11*X_42+X_12*X_41+X_21*X_42-X_22*X_41)/(X_11*X_22*X_33-X_11*X_23*X_32-X_12*X_21*X_33+X_12*X_23*X_31+X_13*X_21*X_32-X_13*X_22*X_31-X_11*X_22*X_43+X_11*X_23*X_42+X_12*X_21*X_43-X_12*X_23*X_41-X_13*X_21*X_42+X_13*X_22*X_41+X_11*X_32*X_43-X_11*X_33*X_42-X_12*X_31*X_43+X_12*X_33*X_41+X_13*X_31*X_42-X_13*X_32*X_41-X_21*X_32*X_43+X_21*X_33*X_42+X_22*X_31*X_43-X_22*X_33*X_41-X_23*X_31*X_42+X_23*X_32*X_41);
       	B(5, 10) = -(X_11*X_22-X_12*X_21-X_11*X_32+X_12*X_31+X_21*X_32-X_22*X_31)/(X_11*X_22*X_33-X_11*X_23*X_32-X_12*X_21*X_33+X_12*X_23*X_31+X_13*X_21*X_32-X_13*X_22*X_31-X_11*X_22*X_43+X_11*X_23*X_42+X_12*X_21*X_43-X_12*X_23*X_41-X_13*X_21*X_42+X_13*X_22*X_41+X_11*X_32*X_43-X_11*X_33*X_42-X_12*X_31*X_43+X_12*X_33*X_41+X_13*X_31*X_42-X_13*X_32*X_41-X_21*X_32*X_43+X_21*X_33*X_42+X_22*X_31*X_43-X_22*X_33*X_41-X_23*X_31*X_42+X_23*X_32*X_41);
       	B(6, 2) = (X_22*X_33-X_23*X_32-X_22*X_43+X_23*X_42+X_32*X_43-X_33*X_42)/(X_11*X_22*X_33-X_11*X_23*X_32-X_12*X_21*X_33+X_12*X_23*X_31+X_13*X_21*X_32-X_13*X_22*X_31-X_11*X_22*X_43+X_11*X_23*X_42+X_12*X_21*X_43-X_12*X_23*X_41-X_13*X_21*X_42+X_13*X_22*X_41+X_11*X_32*X_43-X_11*X_33*X_42-X_12*X_31*X_43+X_12*X_33*X_41+X_13*X_31*X_42-X_13*X_32*X_41-X_21*X_32*X_43+X_21*X_33*X_42+X_22*X_31*X_43-X_22*X_33*X_41-X_23*X_31*X_42+X_23*X_32*X_41);
       	B(6, 5) = -(X_12*X_33-X_13*X_32-X_12*X_43+X_13*X_42+X_32*X_43-X_33*X_42)/(X_11*X_22*X_33-X_11*X_23*X_32-X_12*X_21*X_33+X_12*X_23*X_31+X_13*X_21*X_32-X_13*X_22*X_31-X_11*X_22*X_43+X_11*X_23*X_42+X_12*X_21*X_43-X_12*X_23*X_41-X_13*X_21*X_42+X_13*X_22*X_41+X_11*X_32*X_43-X_11*X_33*X_42-X_12*X_31*X_43+X_12*X_33*X_41+X_13*X_31*X_42-X_13*X_32*X_41-X_21*X_32*X_43+X_21*X_33*X_42+X_22*X_31*X_43-X_22*X_33*X_41-X_23*X_31*X_42+X_23*X_32*X_41);
       	B(6, 8) = (X_12*X_23-X_13*X_22-X_12*X_43+X_13*X_42+X_22*X_43-X_23*X_42)/(X_11*X_22*X_33-X_11*X_23*X_32-X_12*X_21*X_33+X_12*X_23*X_31+X_13*X_21*X_32-X_13*X_22*X_31-X_11*X_22*X_43+X_11*X_23*X_42+X_12*X_21*X_43-X_12*X_23*X_41-X_13*X_21*X_42+X_13*X_22*X_41+X_11*X_32*X_43-X_11*X_33*X_42-X_12*X_31*X_43+X_12*X_33*X_41+X_13*X_31*X_42-X_13*X_32*X_41-X_21*X_32*X_43+X_21*X_33*X_42+X_22*X_31*X_43-X_22*X_33*X_41-X_23*X_31*X_42+X_23*X_32*X_41);
       	B(6, 11) = -(X_12*X_23-X_13*X_22-X_12*X_33+X_13*X_32+X_22*X_33-X_23*X_32)/(X_11*X_22*X_33-X_11*X_23*X_32-X_12*X_21*X_33+X_12*X_23*X_31+X_13*X_21*X_32-X_13*X_22*X_31-X_11*X_22*X_43+X_11*X_23*X_42+X_12*X_21*X_43-X_12*X_23*X_41-X_13*X_21*X_42+X_13*X_22*X_41+X_11*X_32*X_43-X_11*X_33*X_42-X_12*X_31*X_43+X_12*X_33*X_41+X_13*X_31*X_42-X_13*X_32*X_41-X_21*X_32*X_43+X_21*X_33*X_42+X_22*X_31*X_43-X_22*X_33*X_41-X_23*X_31*X_42+X_23*X_32*X_41);
       	B(7, 2) = -(X_21*X_33-X_23*X_31-X_21*X_43+X_23*X_41+X_31*X_43-X_33*X_41)/(X_11*X_22*X_33-X_11*X_23*X_32-X_12*X_21*X_33+X_12*X_23*X_31+X_13*X_21*X_32-X_13*X_22*X_31-X_11*X_22*X_43+X_11*X_23*X_42+X_12*X_21*X_43-X_12*X_23*X_41-X_13*X_21*X_42+X_13*X_22*X_41+X_11*X_32*X_43-X_11*X_33*X_42-X_12*X_31*X_43+X_12*X_33*X_41+X_13*X_31*X_42-X_13*X_32*X_41-X_21*X_32*X_43+X_21*X_33*X_42+X_22*X_31*X_43-X_22*X_33*X_41-X_23*X_31*X_42+X_23*X_32*X_41);
       	B(7, 5) = (X_11*X_33-X_13*X_31-X_11*X_43+X_13*X_41+X_31*X_43-X_33*X_41)/(X_11*X_22*X_33-X_11*X_23*X_32-X_12*X_21*X_33+X_12*X_23*X_31+X_13*X_21*X_32-X_13*X_22*X_31-X_11*X_22*X_43+X_11*X_23*X_42+X_12*X_21*X_43-X_12*X_23*X_41-X_13*X_21*X_42+X_13*X_22*X_41+X_11*X_32*X_43-X_11*X_33*X_42-X_12*X_31*X_43+X_12*X_33*X_41+X_13*X_31*X_42-X_13*X_32*X_41-X_21*X_32*X_43+X_21*X_33*X_42+X_22*X_31*X_43-X_22*X_33*X_41-X_23*X_31*X_42+X_23*X_32*X_41);
       	B(7, 8) = -(X_11*X_23-X_13*X_21-X_11*X_43+X_13*X_41+X_21*X_43-X_23*X_41)/(X_11*X_22*X_33-X_11*X_23*X_32-X_12*X_21*X_33+X_12*X_23*X_31+X_13*X_21*X_32-X_13*X_22*X_31-X_11*X_22*X_43+X_11*X_23*X_42+X_12*X_21*X_43-X_12*X_23*X_41-X_13*X_21*X_42+X_13*X_22*X_41+X_11*X_32*X_43-X_11*X_33*X_42-X_12*X_31*X_43+X_12*X_33*X_41+X_13*X_31*X_42-X_13*X_32*X_41-X_21*X_32*X_43+X_21*X_33*X_42+X_22*X_31*X_43-X_22*X_33*X_41-X_23*X_31*X_42+X_23*X_32*X_41);
       	B(7, 11) = (X_11*X_23-X_13*X_21-X_11*X_33+X_13*X_31+X_21*X_33-X_23*X_31)/(X_11*X_22*X_33-X_11*X_23*X_32-X_12*X_21*X_33+X_12*X_23*X_31+X_13*X_21*X_32-X_13*X_22*X_31-X_11*X_22*X_43+X_11*X_23*X_42+X_12*X_21*X_43-X_12*X_23*X_41-X_13*X_21*X_42+X_13*X_22*X_41+X_11*X_32*X_43-X_11*X_33*X_42-X_12*X_31*X_43+X_12*X_33*X_41+X_13*X_31*X_42-X_13*X_32*X_41-X_21*X_32*X_43+X_21*X_33*X_42+X_22*X_31*X_43-X_22*X_33*X_41-X_23*X_31*X_42+X_23*X_32*X_41);
       	B(8, 2) = (X_21*X_32-X_22*X_31-X_21*X_42+X_22*X_41+X_31*X_42-X_32*X_41)/(X_11*X_22*X_33-X_11*X_23*X_32-X_12*X_21*X_33+X_12*X_23*X_31+X_13*X_21*X_32-X_13*X_22*X_31-X_11*X_22*X_43+X_11*X_23*X_42+X_12*X_21*X_43-X_12*X_23*X_41-X_13*X_21*X_42+X_13*X_22*X_41+X_11*X_32*X_43-X_11*X_33*X_42-X_12*X_31*X_43+X_12*X_33*X_41+X_13*X_31*X_42-X_13*X_32*X_41-X_21*X_32*X_43+X_21*X_33*X_42+X_22*X_31*X_43-X_22*X_33*X_41-X_23*X_31*X_42+X_23*X_32*X_41);
       	B(8, 5) = -(X_11*X_32-X_12*X_31-X_11*X_42+X_12*X_41+X_31*X_42-X_32*X_41)/(X_11*X_22*X_33-X_11*X_23*X_32-X_12*X_21*X_33+X_12*X_23*X_31+X_13*X_21*X_32-X_13*X_22*X_31-X_11*X_22*X_43+X_11*X_23*X_42+X_12*X_21*X_43-X_12*X_23*X_41-X_13*X_21*X_42+X_13*X_22*X_41+X_11*X_32*X_43-X_11*X_33*X_42-X_12*X_31*X_43+X_12*X_33*X_41+X_13*X_31*X_42-X_13*X_32*X_41-X_21*X_32*X_43+X_21*X_33*X_42+X_22*X_31*X_43-X_22*X_33*X_41-X_23*X_31*X_42+X_23*X_32*X_41);
       	B(8, 8) = (X_11*X_22-X_12*X_21-X_11*X_42+X_12*X_41+X_21*X_42-X_22*X_41)/(X_11*X_22*X_33-X_11*X_23*X_32-X_12*X_21*X_33+X_12*X_23*X_31+X_13*X_21*X_32-X_13*X_22*X_31-X_11*X_22*X_43+X_11*X_23*X_42+X_12*X_21*X_43-X_12*X_23*X_41-X_13*X_21*X_42+X_13*X_22*X_41+X_11*X_32*X_43-X_11*X_33*X_42-X_12*X_31*X_43+X_12*X_33*X_41+X_13*X_31*X_42-X_13*X_32*X_41-X_21*X_32*X_43+X_21*X_33*X_42+X_22*X_31*X_43-X_22*X_33*X_41-X_23*X_31*X_42+X_23*X_32*X_41);
       	B(8, 11) = -(X_11*X_22-X_12*X_21-X_11*X_32+X_12*X_31+X_21*X_32-X_22*X_31)/(X_11*X_22*X_33-X_11*X_23*X_32-X_12*X_21*X_33+X_12*X_23*X_31+X_13*X_21*X_32-X_13*X_22*X_31-X_11*X_22*X_43+X_11*X_23*X_42+X_12*X_21*X_43-X_12*X_23*X_41-X_13*X_21*X_42+X_13*X_22*X_41+X_11*X_32*X_43-X_11*X_33*X_42-X_12*X_31*X_43+X_12*X_33*X_41+X_13*X_31*X_42-X_13*X_32*X_41-X_21*X_32*X_43+X_21*X_33*X_42+X_22*X_31*X_43-X_22*X_33*X_41-X_23*X_31*X_42+X_23*X_32*X_41);

	
	
	//dNHdF 9 x 1
	Eigen::Vector9d dw;
	dw.setZero();
        dpsi_neo_hookean_dF(dw, F, C, D);
	dV.setZero();
	dV = B.transpose() * dw;
    };

    quadrature_single_point(dV, q, element, volume, neohookean_linear_tet);  
    
}
